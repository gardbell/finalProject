/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-03-15 04:46:34 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.ksj.schedule;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class schedule_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\r\n");
      out.write("<title>schedule</title>\r\n");
      out.write("<style>\r\n");
      out.write("table{\r\n");
      out.write("	margin: 10px auto;\r\n");
      out.write("	clear: both;\r\n");
      out.write("}\r\n");
      out.write("#month{\r\n");
      out.write("	margin: 0px auto;\r\n");
      out.write("}\r\n");
      out.write("table td{\r\n");
      out.write("	border-top: 1px solid gray;\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	height: 100px;\r\n");
      out.write("}\r\n");
      out.write(".sunday{\r\n");
      out.write("	color: red;\r\n");
      out.write("}\r\n");
      out.write(".monthday{\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".tuesday{\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".wednesday{\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".thursday{\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".friday{\r\n");
      out.write("\r\n");
      out.write("}\r\n");
      out.write(".saturday{\r\n");
      out.write("	color: blue;\r\n");
      out.write("}\r\n");
      out.write("#tdver{\r\n");
      out.write("	position: relative;\r\n");
      out.write("    top: -42px;\r\n");
      out.write("}\r\n");
      out.write(".weekName-div{\r\n");
      out.write("	text-align: center;\r\n");
      out.write("	width: 100px;\r\n");
      out.write("	display: inline;\r\n");
      out.write("	float: left;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("    /* 스타일을 제거하여 드롭다운을 감춤 */\r\n");
      out.write("    select {\r\n");
      out.write("        -webkit-appearance: none;\r\n");
      out.write("        -moz-appearance: none;\r\n");
      out.write("        appearance: none;\r\n");
      out.write("        background-color: transparent;\r\n");
      out.write("        border: none;\r\n");
      out.write("        outline: none;\r\n");
      out.write("    }\r\n");
      out.write("\r\n");
      out.write("    /* 원하는 스타일을 설정 */\r\n");
      out.write("    .custom-select {\r\n");
      out.write("        display: inline-block;\r\n");
      out.write("        padding: 5px 10px;\r\n");
      out.write("        border: none;\r\n");
      out.write("        background-color: #fff;\r\n");
      out.write("        cursor: pointer;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("<script>\r\n");
      out.write("var now = new Date();\r\n");
      out.write("var year=0;\r\n");
      out.write("var month=0;\r\n");
      out.write("var days=[\"sunday\",\"monthday\",\"tuesday\",\"wednesday\",\"thursday\",\"friday\",\"saturday\"];\r\n");
      out.write("var firstDay=0;;\r\n");
      out.write("var count=0;\r\n");
      out.write("var lastDate=0;\r\n");
      out.write("var row=0;\r\n");
      out.write("function callCal(){\r\n");
      out.write("	getRow();\r\n");
      out.write("	createCal();\r\n");
      out.write("	getTop();\r\n");
      out.write("}\r\n");
      out.write("function getRow(){\r\n");
      out.write("	year=now.getFullYear();\r\n");
      out.write("	month=now.getMonth();\r\n");
      out.write("	firstDay = new Date(year,month,1).getDay();\r\n");
      out.write("	count = firstDay;\r\n");
      out.write("	lastDate = new Date(year,month+1,0).getDate();\r\n");
      out.write("	for(var i=1;i<=lastDate;i++){\r\n");
      out.write("		if(count==6){\r\n");
      out.write("			count=-1;\r\n");
      out.write("			row+=1;\r\n");
      out.write("		}else if(i==lastDate){\r\n");
      out.write("			row+=1;\r\n");
      out.write("		}\r\n");
      out.write("		count+=1;\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("function createCal(){\r\n");
      out.write("	count=1;\r\n");
      out.write("	var tableNode=document.getElementById('calendar');\r\n");
      out.write("	for(var j=1;j<=row;j++){\r\n");
      out.write("		var trNode=document.createElement('tr');\r\n");
      out.write("		for(var i=0;i<=6;i++){\r\n");
      out.write("			if(count==1&&firstDay!=0){\r\n");
      out.write("				var voidTdNode=document.createElement('td');\r\n");
      out.write("				voidTdNode.setAttribute('colspan',firstDay);\r\n");
      out.write("				voidTdNode.setAttribute('class','voidTdNode');\r\n");
      out.write("				trNode.appendChild(voidTdNode);\r\n");
      out.write("				i=firstDay;\r\n");
      out.write("			}\r\n");
      out.write("			var tdNode=document.createElement('td');\r\n");
      out.write("			var tdDivNode=document.createElement('div');\r\n");
      out.write("			tdDivNode.setAttribute('class',days[i]);\r\n");
      out.write("			tdDivNode.setAttribute('id','tdver');\r\n");
      out.write("			var tdDateText=document.createTextNode(count);\r\n");
      out.write("			tdDivNode.appendChild(tdDateText);\r\n");
      out.write("			tdNode.appendChild(tdDivNode);\r\n");
      out.write("			var tdListNode=document.createElement('div');\r\n");
      out.write("			tdNode.appendChild(tdListNode);\r\n");
      out.write("			trNode.appendChild(tdNode);\r\n");
      out.write("			if(count==lastDate&&firstDay!=6){\r\n");
      out.write("				var voidTdNode=document.createElement('td');\r\n");
      out.write("				voidTdNode.setAttribute('colspan',6-i);\r\n");
      out.write("				voidTdNode.setAttribute('class','voidTdNode');\r\n");
      out.write("				trNode.appendChild(voidTdNode);\r\n");
      out.write("				i=7;\r\n");
      out.write("			}\r\n");
      out.write("			count+=1;\r\n");
      out.write("		}\r\n");
      out.write("		tableNode.appendChild(trNode);\r\n");
      out.write("	}\r\n");
      out.write("}\r\n");
      out.write("function getTop(){\r\n");
      out.write("	var hDiv=document.getElementById('month');\r\n");
      out.write("	hDiv.setAttribute('style','text-align:center;')\r\n");
      out.write("	var hyear=hDiv.firstChild;\r\n");
      out.write("	var hmonth=hDiv.lastChild;\r\n");
      out.write("	var hyText=document.createTextNode(year);\r\n");
      out.write("	hyear.appendChild(hyText);\r\n");
      out.write("	var hText=document.createTextNode('\\u00A0\\u00A0\\u00A0\\u00A0'+month+'\\u00A0\\u00A0\\u00A0\\u00A0');\r\n");
      out.write("	var hlp=document.createElement('span');\r\n");
      out.write("	var hl=document.createTextNode('<');\r\n");
      out.write("	hlp.appendChild(hl);\r\n");
      out.write("	var hrp=document.createElement('span');\r\n");
      out.write("	var hr=document.createTextNode('>');\r\n");
      out.write("	hrp.appendChild(hr);\r\n");
      out.write("	hmonth.appendChild(hlp);\r\n");
      out.write("	hmonth.appendChild(hText);\r\n");
      out.write("	hmonth.appendChild(hrp);\r\n");
      out.write("	hDiv.appendChild(hmonth);\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body onload=\"javascript:callCal()\">\r\n");
      out.write("<h1>캘린더</h1>\r\n");
      out.write("<div id=\"month\"><div></div><h1></h1></div>\r\n");
      out.write("<div style=\"margin: 0px auto; width: 700px;\">\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"sunday\">sun</label></div>\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"monthday\">mon</label></div>\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"tuesday\">tue</label></div>\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"wednesday\">wed</label></div>\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"thursday\">thu</label></div>\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"friday\">fri</label></div>\r\n");
      out.write("	<div class=\"weekName-div\"><label class=\"saturday\">sat</label></div>\r\n");
      out.write("</div>\r\n");
      out.write("<table id=\"calendar\" cellspacing=\"0\">\r\n");
      out.write("</table>\r\n");
      out.write("<div class=\"custom-select\">\r\n");
      out.write("    <select>\r\n");
      out.write("        <option value=\"1\">옵션 1</option>\r\n");
      out.write("        <option value=\"2\">옵션 2</option>\r\n");
      out.write("        <option value=\"3\">옵션 3</option>\r\n");
      out.write("    </select>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
