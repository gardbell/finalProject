/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.84
 * Generated at: 2024-03-18 08:12:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.member;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class memberJoin_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<form name=\"join\" action=\"memberJoin.do\" method=\"post\" onsubmit=\"combine()\">\r\n");
      out.write("<table>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th width=\"100px\">* 기업</th>\r\n");
      out.write("	<td><input class=\"text2\" type=\"text\" name=\"com_idx\" placeholder=\"기업 조회\" required>\r\n");
      out.write("	</td>\r\n");
      out.write("	<td>\r\n");
      out.write("	<input class=\"push1\" type=\"button\" value=\"조회\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>* 이름</th>\r\n");
      out.write("	<td><input class=\"text2\" type=\"text\" name=\"name\" placeholder=\"이름\" minlength=\"2\" maxlength=\"8\" required>\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>* ID</th>\r\n");
      out.write("	<td><input class=\"text2\" type=\"text\" name=\"id\" placeholder=\"ID (영문자만 입력가능)\" pattern=\"[A-Za-z]+\" minlength=\"4\" maxlength=\"8\" required>\r\n");
      out.write("	</td>\r\n");
      out.write("	<td>\r\n");
      out.write("	<input class=\"push1\" type=\"button\" value=\"중복확인\" onclick=\"idCheckMsg()\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td></td>\r\n");
      out.write("	<td><span id=\"idCheckMsg\"></span></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>* PW</th>\r\n");
      out.write("	<td><input class=\"text2\" type=\"password\" name=\"pwd\" placeholder=\"비밀번호\" minlength=\"4\" maxlength=\"8\" required></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>* Email</th>\r\n");
      out.write("	<td colspan=\"2\">\r\n");
      out.write("		<input class=\"text3\" width=\"200px\" type=\"text\" id=\"email1\" name=\"email1\" placeholder=\"Email\" required>\r\n");
      out.write("		@\r\n");
      out.write("		<input class=\"text3\" type=\"text\" id=\"email2\" name=\"email2\" placeholder=\"mail.com\" required>\r\n");
      out.write("	\r\n");
      out.write("		<select class=\"text3\" name=\"emails\" onchange=\"email_change()\">\r\n");
      out.write("			<option value=\"1\" selected>직접 입력</option>\r\n");
      out.write("			<option value=\"naver.com\">naver.com</option>\r\n");
      out.write("			<option value=\"gmail.com\">gmail.com</option>\r\n");
      out.write("			<option value=\"hanmail.com\">hanmail.com</option>\r\n");
      out.write("		</select>		\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>주소</th>\r\n");
      out.write("<td>\r\n");
      out.write("	<input class=\"text3\" type=\"text\" id=\"sample4_postcode\" name=\"addr1\" placeholder=\"우편번호\" readonly>\r\n");
      out.write("	<input class=\"push1\" type=\"button\" onclick=\"sample4_execDaumPostcode()\" value=\"우편번호 찾기\" required><br>\r\n");
      out.write("	<input class=\"text2\" type=\"text\" id=\"sample4_roadAddress\" name=\"adrr2\" placeholder=\"도로명주소\" readonly>\r\n");
      out.write("	<input class=\"text2\" type=\"text\" id=\"sample4_jibunAddress\" name=\"addr3\" placeholder=\"지번주소\" readonly>\r\n");
      out.write("	<span id=\"guide\" style=\"color:#999;display:none\"></span>\r\n");
      out.write("	<input class=\"text2\" type=\"text\" id=\"sample4_detailAddress\" name=\"addr4\" placeholder=\"상세주소\" required>\r\n");
      out.write("	<input class=\"text3\" type=\"text\" id=\"sample4_extraAddress\" name=\"addr5\" placeholder=\"참고항목\" required>\r\n");
      out.write("</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>TEL</th>\r\n");
      out.write("	<td><input class=\"text2\"  type=\"text\" name=\"tel\" placeholder=\"전화번호\"></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>* 주민번호</th>\r\n");
      out.write("	<td>\r\n");
      out.write("		<input class=\"text3\"  type=\"text\" id=\"hum_num1\" name=\"hum_num1\" placeholder=\"생년월일\" minlength=\"6\" maxlength=\"6\" required>\r\n");
      out.write("		-\r\n");
      out.write("		<input class=\"text3\"  type=\"password\" id=\"hum_num2\" name=\"hum_num2\" placeholder=\"뒷자리\" minlength=\"7\" maxlength=\"7\" required>	\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<th>* 부서명</th>\r\n");
      out.write("	<td><input class=\"text2\"  type=\"text\" name=\"dept\" placeholder=\"부서명\" required></td>\r\n");
      out.write("</tr>\r\n");
      out.write("<tr>\r\n");
      out.write("	<td align=\"center\" colspan=\"3\">\r\n");
      out.write("	<input class=\"submit\" type=\"submit\" value=\"가입하기\">\r\n");
      out.write("	</td>\r\n");
      out.write("</tr>\r\n");
      out.write("</table>\r\n");
      out.write("<input type=\"hidden\" id=\"hum_num\" name=\"hum_num\">\r\n");
      out.write("<input type=\"hidden\" id=\"addr\" name=\"addr\">\r\n");
      out.write("<input type=\"hidden\" id=\"email\" name=\"email\">\r\n");
      out.write("</form>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
